@using Core.Models.UsersViewModels

@model Core.Models.UsersViewModels.EditViewModel;

@{
    ViewData["Title"] = "Users";
}

<h2>@ViewData["Title"]</h2>
<h4>Edit</h4>
<hr />

<dl class="dl-horizontal">
    <dt>
        @Html.DisplayNameFor(model => model.Id)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Id)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.User.ApplicationUser.UserName)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.User.ApplicationUser.UserName)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.User.ApplicationUser.Email)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.User.ApplicationUser.Email)
    </dd>
    <dt>
        Roles
    </dt>
    <dd>
        @foreach(SelectRoleViewModel rvm in Model.User.Roles)
        {
            @if (@rvm.Selected) {
                @rvm.Role.Name <br/>
            }
        }
    </dd>
</dl>

<hr />

@using (Html.BeginForm("Edit", "Users", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.User.User.Id)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.User.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.User.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.User.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.User.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<hr />

@if (User.IsInRole(Core.Models.Identity.Roles.Admin))
{

    @using (Html.BeginForm("Roles", "Users", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.User.User.Id)

        <div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-2">Rol</label>
                <div class="col-md-10" style="padding-top: 7px">
                    @Html.EditorFor(model => model.User.Roles)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <hr />
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
